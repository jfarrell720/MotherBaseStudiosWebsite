pipeline {
    agent any

    environment {
        REPO_URL = 'https://github.com/jfarrell720/MotherBaseStudiosWebsite.git'
        BRANCH = 'develop'
        GITHUB_TOKEN = credentials('GitHubToken')  // Securely stored GitHub Personal Access Token
    }

    stages {
        stage('Clone Repository') {
            steps {
                git branch: "${BRANCH}",
                    credentialsId: 'GitHubToken',  // Use the stored credentials
                    url: "${REPO_URL}"
            }
        }

        stage('Build') {
            steps {
                echo 'No build step required for HTML. Proceeding to validation.'
            }
        }

        stage('Validate HTML') {
            steps {
                powershell 'npx htmlhint **/*.html'
            }
        }


        // stage('Test') {
        //     steps {
        //         echo 'Running automated tests...'
        //         sh 'npx cypress run'
        //     }
        // }

        stage('Package') {
            steps {
                echo 'Packaging website...'
                bat 'zip -r website.zip *.html *.css *.js'
            }
        }

        stage('Deploy to GitHub Pages') {
            steps {
                echo 'Deploying to GitHub Pages...'
                withCredentials([usernamePassword(credentialsId: 'GitHubToken', usernameVariable: 'USERNAME', passwordVariable: 'GITHUB_TOKEN')]) {
                    bat '''
                        git config --global user.name "jfarrell720"
                        git config --global user.email "jamesfarrell720@gmail.com"
                        git checkout -B gh-pages
                        git add .
                        git commit -m "Deploying to GitHub Pages"
                        git push https://${USERNAME}:${GITHUB_TOKEN}@github.com/jfarrell720/MotherBaseStudiosWebsite.git gh-pages
                    '''
                }
            }
        }

    }

    post {
        success {
            echo 'Pipeline completed successfully!'
        }
        failure {
            echo 'Pipeline failed.'
        }
    }
}
