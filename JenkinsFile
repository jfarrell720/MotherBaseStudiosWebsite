pipeline {
    agent any

    stages {
        stage('Setup Known Hosts') {
            steps {
                script {
                    // Automatically add GitHub host key to known hosts
                    def knownHostsFile = new File(System.env.HOME + '/.ssh/known_hosts')
                    def githubFingerprint = 'SHA256:+DiY3wvvV6TuJJhbpZisF/zLDA0zPMSvHdkr4UvCOqU'
                    def key = "github.com ssh-ed25519 " + githubFingerprint.split(':')[1]

                    if (!knownHostsFile.text.contains(key)) {
                        knownHostsFile.append(key + "\n")
                    }
                }
            }
        }

        stage('Clone Repository') {
            steps {
                git branch: 'main', credentialsId: 'GitHubSSHKey', url: 'git@github.com:jfarrell720/MotherBaseStudiosWebsite.git'
            }
        }

        stage('Deploy to GitHub Pages') {
            steps {
                echo 'Deploying to GitHub Pages...'
                withCredentials([string(credentialsId: 'GitHubToken', variable: 'GITHUB_TOKEN')]) {
                    bat '''
                        git config --global user.name "jfarrell720"
                        git config --global user.email "jamesfarrell720@gmail.com"
                        git checkout -B gh-pages
                        git add .
                        git commit -m "Deploying to GitHub Pages"
                        git push https://${GITHUB_TOKEN}@github.com/jfarrell720/MotherBaseStudiosWebsite.git gh-pages --force
                    '''
                }
            }
        }
    }



    post {
        success {
            echo 'Pipeline completed successfully!'
        }
        failure {
            echo 'Pipeline failed.'
        }
    }
}